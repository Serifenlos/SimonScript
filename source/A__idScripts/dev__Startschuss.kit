/*
// BEGIN__HARVEST_EXCEPTION_ZSTRING
<javascriptresource>
<name>[ss] Startschuss ID</name>
<about>um die Bildbearbeitung vorzubereiten | By Simon Adrian | http://www.SimonAdrian.de</about>
<category>SimonScript</category>
</javascriptresource>
// END__HARVEST_EXCEPTION_ZSTRING
*/



<!-- @import "../_functions/loopFiles.js" -->

/*//// OPTIONS ////*/
/*=================================================================================*/
var Rasterweite = 70;
var minAufloesung = 300;
var Suffix_RGB = "__RGB";
var option_convert_8bit = true;

// var mainFolder = "/Users/simon/Arbeit/11Freunde/_Cloud/Buch/";
// var subFolder = "RGB";

// var mainFolder = "/Users/simon/Arbeit/11Freunde/223/";
var mainFolder = "/Users/simon/Arbeit/11Freunde/Spezial Duelle/";
var subFolder = "RGB";



if (!app.selection.length > 0) {
    alert("Wähle das zubearbeitende Bild aus");
    exit();
}


//// VARIABLES ////
/*=================================================================================*/
var myDoc, myDocPath, myLivePath, myFolder, myFile, myImage, ZielAufloesung, hScale, vScale, hPPI, vPPI, myImage, myImagePath, myImageFile, myNewImageFile, myNewPath, unter300

var myDoc = app.activeDocument;
//var myDocPath = myDoc.filePath;  // TODO wenn noch nie gespeichert dann Abbruch // wirklich nötig? 
var myLivePath = myDoc.filePath;
var myFolder = new Folder(myLivePath);

var myFile = app.selection[0];
var myImage = myFile.images[0];
myLink = myFile.graphics[0].itemLink;

var ZielAufloesung = Rasterweite * 2.54 * 2;
var hScale = myImage.horizontalScale;
var vScale = myImage.verticalScale;
var hPPI = myImage.effectivePpi[0];
var vPPI = myImage.effectivePpi[1];
var interpolieren = 0;

var myImage = myLink.parent;
var myImagePath = myLink.filePath;
var myImageFile = new File(myImagePath);
var myNewImageFile = GetFileNameOnly(myImageFile.name);

var myFolder = new Folder(mainFolder + subFolder);
if (!myFolder.exists) myFolder.create();

/*TODO ob tif oder psd // hier muss variabl */
var myNewPath = myFolder + "/" + myNewImageFile + Suffix_RGB + ".psd";
/*=================================================================================*/

/***********************************************************************************/
run_ID();
/***********************************************************************************/



//// FUNCTIONS ////
/*=================================================================================*/
function run_ID() {

    if (new RegExp("__RGB").test(myNewImageFile)) {
        alert("Das Bild ist schon vorbereitet");
        exit();
    }

    if (myFile.isValid == false) {
        alert("Wähle das zubearbeitende Bild aus");
        exit();
    }



    if (hPPI < minAufloesung) {
        // if (hPPI == minAufloesung) {
        var myDialog = new Window("dialog", "unter " + minAufloesung + "dpi");
        var stxt = myDialog.add("group");
        stxt.add("statictext", undefined, "Das Bild hat nur " + hPPI + " dpi");

        var myButtonGroup = myDialog.add("group");
        var ok = myButtonGroup.add("button", undefined, "weiter");
        var cancel = myButtonGroup.add("button", undefined, "stopp");

        ok.onClick = function() {
            interpolieren = 1;
            myDialog.close();
        }
        cancel.onClick = function() {
            interpolieren = 0;
            myDialog.close();
            return;
        }

        myDialog.show();

    } else {
        OpenImage();
        Relink(myLink, myNewPath);
        // UpdateAllOutdatedLinks();
    }

    if (interpolieren == 1) {
        OpenImage();
        Relink(myLink, myNewPath);
        // UpdateAllOutdatedLinks();
    }
}

/*=================================================================================*/
function Relink(myLink, myNewPath) {
    var newFile = new File(myNewPath);
    if (newFile.exists) {
        var originalLinkFile = new File(myLink.filePath);
        myLink.relink(newFile);
        try {
            if (myLink.status == LinkStatus.linkOutOfDate) {
                myLink.update();
            }
        } catch (err) {}
    }
}
/*=================================================================================*/
function UpdateAllOutdatedLinks() {
    for (var myCounter = myDoc.links.length - 1; myCounter >= 0; myCounter--) {
        var myLink = myDoc.links[myCounter];
        if (myLink.status == LinkStatus.linkOutOfDate) {
            myLink.update();
        }
    }
}

/*=================================================================================*/
function OpenImage() {
    try {
        if (myFile.isValid == true && myFile.constructor.name == "Rectangle") {
            //           myLink = myFile.graphics[0].itemLink;
        }
    } catch (e) {
        alert("Wähle das zubearbeitende Bild aus");
        exit();
    }

    CreateBridgeTalkMessage();
}

/*=================================================================================*/
function CreateBridgeTalkMessage() {
    var bt = new BridgeTalk();
    bt.target = "photoshop-140";
    // bt.body = ResaveInPS.toSource() + "('" + myImagePath + "','" + myNewPath + "'," + hScale + "," + vScale + "," + ZielAufloesung + "," + minAufloesung + "," + hPPI + "," + option_convert_8bit + "," + papier + ");";
    bt.body = runPS.toSource() + "('" + myImagePath + "','" + myNewPath + "'," + hScale + "," + vScale + "," + ZielAufloesung + "," + minAufloesung + "," + hPPI + "," + option_convert_8bit + ");";
    bt.onResult = function(resObj) {}
    bt.send(100);
}



function runPS(myImagePath, myNewPath, hScale, vScale, ZielAufloesung, minAufloesung, hPPI, option_convert_8bit) {
    <!-- @import "../../build/A__psScripts/functions/basic.jsx" -->
    <!-- @import "../../build/A__psScripts/functions/mb_Utils.jsx" -->
    <!-- @import "../../build/A__psScripts/functions/zoom.jsx" -->
    <!-- @import "../../build/A__psScripts/functions/ready.jsx" -->
    <!-- @import "../../build/A__psScripts/functions/dialog.jsx" -->
    <!-- @import "../../build/A__psScripts/functions/save.jsx" -->

    try {
        prefSave();
        prefSet(DialogModes.NO, Units.MM);

        var myPsDoc = app.open(new File(myImagePath));
        var doc = app.activeDocument;
        var cancel = 0;

        /* if (doc.activeLayer.kind != LayerKind.NORMAL) { */
        if ((doc.activeLayer.kind != LayerKind.NORMAL) || (getLayersNb() >= 2) || (getLayersNb() == 1) && (hasBackground())) {
            dialog_chooseLayer();
            if (cancel === 1) {
                return false;
            }
        }
        if(debug) {
            startschuss();
        }
        else{
            doc.suspendHistory("Startschuss", "startschuss()");
        }
        
        startschuss_Rest();

    } catch (e) {
        logger(arguments.callee.name);
        alert("Error 1");
    }


    /*     function startschuss() {
            if (debug) {time_start()};

            noProfile();
            gray2rgb();
            cmyk2rgb();
            sRGB2eciRGB();
            if(getBitDepth(!8)){setBitDepth(8)}

            setSize("width", myPsDoc.width.value * hScale / 10);


            if (hasBackground() && getActiveLayerIndex() != 0) {
                var temp = doc.activeLayer.name;
                gotoLayer(0);
                nameLayer("HG");
                gotoLayer(temp);
                var temp = "";
            }

            nameLayer("Original");
            smartObject();
            createGroup("vorher", "passThrough", "none", 100, t);
            dublicate("nachher");
            gotoLayer("vorher");
            selectLayer("down", 1);
            nameLayer("vorher Ebene");
            rasterSmartObject();
            toogleOpenCloseSet();
            selectLayer("up", 1);
            createColorLayer("Weiss", "normal", "none", 100, "none", 255, 255, 255);
            moveLayer("Weiss", "Original", "down");

            createGroup("Einstellungen", "passThrough", "none", 100);
            createLayer("AutoTonwert", "levels", "normal", "gray", 100, "none", f, t);
            toogleVisibility();
            createLayer("Gradation neutral", "curves", "normal", "gray", 100, "none", f, f);

            selectLayer("up", 1);
            createLayer("Selektive Farbe", "selectiveColor", "normal", "violet", 100, "", f, f);
            createLayer("Sättigung Farbe", "hueSaturation", "normal", "blue", 100, "", f, f);
            createLayer("Sättigung Luminanz", "hueSaturation", "luminosity", "green", 100, "", f, f);
            createLayer("Farbe in Balance", "colorBalance", "normal", "yellowColor", 100, "", f, f);
            createLayer("Gradation Kontrast", "curves", "normal", "orange", 100, "", f, f);
            createLayer("Dynamik", "vibrance", "normal", "red", 100, "", f, f);
            gotoLayer("Gradation neutral");

            if (debug) {time_stop(start)};
        } */









    function startschuss_Rest() {

        /*//// BILDGRÖSSE ////*/
        if (hPPI < minAufloesung) {
            myPsDoc.resizeImage(undefined, undefined, minAufloesung, ResampleMethod.PRESERVEDETAILS);
        } else if (hPPI > ZielAufloesung) {
            myPsDoc.resizeImage(undefined, undefined, ZielAufloesung, ResampleMethod.PRESERVEDETAILS);
        } else {
            /* TODO better use setDpi(_dpi) ? oder muss hier uberhaupt etwas geschehen ? */
            myPsDoc.resizeImage(undefined, undefined, hPPI, ResampleMethod.NONE);
        }

        fitScreen();
        zoomOut();
        saveFile_PSD(new File(myNewPath), f, t, f, t, t, f);
        prefReset();
    }
}