/*
// BEGIN__HARVEST_EXCEPTION_ZSTRING
<javascriptresource>
<name>[ss] Startschuss 2 ID</name>
<about>um die Bildbearbeitung vorzubereiten | By Simon Adrian | http://www.SimonAdrian.de</about>
<category>SimonScript</category>
</javascriptresource>
// END__HARVEST_EXCEPTION_ZSTRING
*/


/** Variablen  **************************************************************/

//@include "./assets/json2.js"
var jsonFilePath = "~/ss_var.json";
var jsonData = loadJSON(jsonFilePath);


// Funktion zum Laden und Parsen der JSON-Datei
function loadJSON(filePath) {
    var file = new File(filePath);
    var content;

    if (file.exists) {
        file.open("r");
        content = file.read();
        file.close();

        // Parse JSON-Inhalt
        try {
            return JSON.parse(content);
        } catch (e) {
            alert("Fehler beim Parsen der JSON-Datei:\n" + e);
            return null;
        }
    } else {
        alert("Die JSON-Datei konnte nicht gefunden werden.");
        return null;
    }
}







/** Optionen  **************************************************************/
const ZielAufloesung_dpi = jsonData.ZielAufloesung_dpi;
const minAufloesung = jsonData.minAufloesung;
const suffixRGB = jsonData.suffixRGB;

var mainFolder = jsonData.mainFolder;
var subFolder = jsonData.subFolder;
var ww_mainFolder = jsonData.ww_mainFolder;

var check_trailingSlash = /\/$/; // Prüft, ob der String mit "/" endet
if (!check_trailingSlash.test(mainFolder)) {
    mainFolder += "/"; // Fügt "/" am Ende hinzu, wenn es nicht vorhanden ist
}


// no / here, escape \
getRubrik_array = [
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_\\d{3}_)(.*)(\.indd)", "$2"],
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_BUCH_J11_)(.*)(\.indd)", "$2"],
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_SPEZIAL-EM_)(.*)(\.indd)", "$2"],          // xxx-xxx_11F_SPEZIAL-EM_
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_Legenden_SGE_)(.*)(\.indd)", "$2"],
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_Chronik_2023_)(.*)(\.indd)", "$2"],
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_FMLUI_2022_)(.*)(\.indd)", "$2"],      // xxx_xxx_11F_FMLUI_2022_
    ["(\\w{1,3}[-,_]\\w{1,3}_11F_Planer_Gruppe_)(.*)(\.indd)", "$2"]       // 08-09_11F_Planer_Gruppe_
    //["(\\w{1,3}_\\w{1,3}_11F_\\d{3}_)(.*)(\.indd)", "$2"]       // 30_31_11F_235_Planer_Gruppe_F_FRA_GER.indd
];


alert(suffixRGB);



startschuss();

function startschuss() {
    if (!app.selection.length > 0) {
        alert("Wähle das zubearbeitende Bild aus");
        return;
    }



    // Loop für mehrere Bilder
    for (var i = 0; i < app.selection.length; i++) {

        /** Variablen  **************************************************************/
        var doc, myLivePath, myFolder, myFile, myImage, ZielAufloesung, hScale, vScale, hPPI, vPPI, myImage, myImagePath, myImageFile, myNewImageFile, myNewPath, unter300
        var woodwing_id;

        // Kann doch raus ??
        // var doc = app.activeDocument;           // TODO wenn noch nie gespeichert dann Abbruch
        // var docPath = doc.filePath;             // noch relevant ?
        // var docFolder = new Folder(docPath);    // noch relevant ?

        var idDoc = app.activeDocument;
        var idDocName = GetFileNameOnly(decodeURI(idDoc.name));
        // $.writeln("idDocName: " + idDocName)




        if (app.selection[i] instanceof Image && app.selection[i].parent.graphics.length > 0) {
            var selection = app.selection[i].parent;
        } else {
            var selection = app.selection[i];
        }


        var image = selection.images[0];
        imageLink = selection.graphics[0].itemLink;

        try {
            if (imageLink.wwoi) {
                var isWoodwing = true;
                var woodwing_imageID = imageLink.wwoi;
            }
        } catch (e) {
            var isWoodwing = false;
        }

        var ZielAufloesung = ZielAufloesung_dpi;
        var hScale = image.horizontalScale;
        var vScale = image.verticalScale;
        var hPPI = image.effectivePpi[0];
        var vPPI = image.effectivePpi[1];
        var interpolieren = 0;

        var image = imageLink.parent;            // was ist das?

        if (!isWoodwing) {
            var imagePath = imageLink.filePath;
        } else {
            var imagePath = imageLink.elvisFilePath;
        }

        var imageFile = new File(imagePath);
        var imageName_init = GetFileNameOnly(decodeURI(imageFile.name));

        if (typeof getRubrik(getRubrik_array) !== 'undefined') {
            var indd_rubrik = getRubrik(getRubrik_array);
        }
        else { var indd_rubrik = "" }

        // var docFolder = new Folder(mainFolder + subFolder + indd_rubrik);
        var docFolder = new Folder(mainFolder + subFolder);
        if (!docFolder.exists) docFolder.create();

        /*TODO ob tif oder psd // hier muss variabl */
        // var new_imagePath = docFolder + "/" + imageName_init + suffixRGB + ".psd";



        /** run Main-function **************************************************************/
        run_ID(imageName_init, docFolder, idDocName, selection, hPPI, imageLink, isWoodwing, woodwing_imageID);

    }

    $.writeln("image: " + image)
    $.writeln("hPPI: " + hPPI);
    $.writeln("imageName_init: " + imageName_init);
    $.writeln("imagePath: " + imagePath)
    $.writeln("imageFile: " + imageFile)
    $.writeln("woodwing_imageID: " + woodwing_imageID)



}



//// FUNCTIONS ////
/*=================================================================================*/

function GetFileNameOnly(_fileName) {
    var myString = "";
    var myResult = _fileName.lastIndexOf(".");
    if (myResult == -1) {
        myString = _fileName;
    } else {
        myString = _fileName.substr(0, myResult);
    }
    // var myString = myString.replace(/^(\d{3}(-|_{2}))(.+)/g, "$3");  //scheidet die erste Seitenzahl ab. Es ist ein Spezialfall, gehört woanders hin
    return myString
}

function getRubrik(_array) {
    try {
        var indd_docname = decodeURI(app.activeDocument.fullName.name);
        for (j = 0; j < _array.length; j++) {
            var regex = new RegExp(_array[j][0], 'g');

            if (indd_docname.match(regex)) {
                indd_rubrik = indd_docname.replace(regex, _array[j][1]);
                return "/" + indd_rubrik;
            }
        }
    } catch (e) { }
}


function run_ID(_imageName_init, _docFolder, _idDocName, _selection, _hPPI, _imageLink, _isWoodwing, _woodwing_imageID) {
    if (!checkRGBFile(_imageName_init)) {
        return;
    }

    if (!checkValidFile(_selection)) {
        alert("Wähle das zubearbeitende Bild aus");
        return;
    }

    // PS=1 , GigaPixel=1, Photo AI=2, stopp=3
    var interpolationMethod = chooseInterpolationMethod(_hPPI);
    if (interpolationMethod == 3) {
        return;
    }

    // openAndRelinkImage(interpolieren, _imageLink, _isWoodwing);
    OpenImage(_docFolder, _idDocName, interpolationMethod, _imageLink, _isWoodwing, _woodwing_imageID);
}


function checkRGBFile(_imageName_init) {
    if (new RegExp("__RGB").test(_imageName_init)) {
        var alreadyRGB_dialog = createDialog("schon vorbereitet?", "ist das bild schon vorbereitet?", "weiter", "stopp");
        return alreadyRGB_dialog.show() ? 0 : 1;
    }
    return 1;
}


function checkValidFile(_selection) {
    return _selection.isValid;
}


function chooseInterpolationMethod(_hPPI) {
    if (_hPPI < minAufloesung) {
        var interpolation_dialog = createDialog("unter " + minAufloesung + "dpi", "Das Bild hat nur " + _hPPI + " dpi", "PS", "GigaPixel", "Photo AI", "stopp");
        return interpolation_dialog.show();
    }
    // return 1;
}






function createDialog(_title, _message) {
    var dialog = new Window("dialog", _title);
    var stxt = dialog.add("group");
    stxt.add("statictext", undefined, _message);
    var buttonGroup = dialog.add("group");

    // Hole die restlichen Argumente als Array von Schaltflächen
    var buttons = Array.prototype.slice.call(arguments, 2);

    for (var index = 0; index < buttons.length; index++) {
        var button = buttons[index];
        var btn = buttonGroup.add("button", undefined, button);
        btn.onClick = (function (index) {
            return function () {
                dialog.close(index);
            }
        })(index);
    }
    return dialog;
}





/*=================================================================================*/
function OpenImage(_docFolder, _idDocName, _interpolationMethod, _imageLink, _isWoodwing, _woodwing_imageID) {
    try {
        if (_imageLink.isValid == true && _imageLink.constructor.name == "Rectangle") {
        }
    } catch (e) {
        alert("Wähle das zubearbeitende Bild aus");
        // return;
    }

    try {
        _imageLink.editOriginal();
        BridgeTalk_processDoc(_docFolder, _idDocName, suffixRGB, _interpolationMethod, _imageLink, _isWoodwing, ww_mainFolder, _woodwing_imageID);
    } catch (e) {
        alert(e)
    }
}


// function CreateBridgeTalkMessage(__interpolMethod) {
//     var bt = new BridgeTalk();
//     bt.target = "photoshop"; //call for cc2020 -> "photoshop-140" //cc2021 -> "photoshop-150"
//     // bt.body = ResaveInPS.toSource() + "('" + myImagePath + "','" + myNewPath + "'," + hScale + "," + vScale + "," + ZielAufloesung + "," + minAufloesung + "," + hPPI + "," + option_convert_8bit + "," + papier + ");";
//     bt.body = runPS.toSource() + "('" + myImagePath + "','" + myNewPath + "'," + hScale + "," + vScale + "," + ZielAufloesung + "," + minAufloesung + "," + hPPI + ",'" + __interpolMethod + "');";
//     bt.onResult = function(resObj) {}
//     bt.send(100);
// }





function BridgeTalk_processDoc(_docFolder, _idDocName, _suffixRGB, _interpolationMethod, _imageLink, _isWoodwing, _ww_mainFolder, _woodwing_imageID) {
    $.writeln("__interpolationMethod: " + _interpolationMethod);
    $.writeln("____imageLink.name2: " + _imageLink.name);
    var imageName = decodeURI(_imageLink.name);
    var bt = new BridgeTalk();
    bt.target = 'photoshop';
    bt.body = runPS.toSource() + "('" + _imageLink + "','" + _docFolder + "','" + _idDocName + "','" + _suffixRGB + "','" + _interpolationMethod + "','" + imageName + "','" + _isWoodwing + "','" + _ww_mainFolder + "','" + _woodwing_imageID + "');";
    bt.send(5);
}

function runPS(_imageLink, _docFolder, _idDocName, _suffixRGB, _interpolationMethod, _imageName, _isWoodwing, _ww_mainFolder, _woodwing_imageID) {
    <!-- @import "../../build/A__psScripts/functions/basic.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/utils.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/view.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/LUT-burn.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/LUT-dodge.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/ready.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/dialog.jsx"; -->
    <!-- @import "../../build/A__psScripts/functions/save.jsx"; -->
    
    var _isWoodwing = (_isWoodwing === 'true');
    var imageName_init = GetFileNameOnly(decodeURI(_imageName));

    /*alert("__interpolationMethod: " + _interpolationMethod);
    alert("_____imageLink: " + _imageLink);
    alert("isWoodwing: " + _isWoodwing);
    alert("_imageLink´: " + _imageName);
    alert("imageName_init: " + imageName_init);
    alert("_ww_mainFolder: " + _ww_mainFolder);
    alert("_woodwing_imageID: " + _woodwing_imageID);
    alert("new_imagePath: " + new_imagePath);
    alert("_docFolder: " + _docFolder);
    alert("_idDocName: " + _idDocName);
    alert("_suffixRGB: " + _suffixRGB) */; 

    var imageFolder_RGB = new Folder(_docFolder + "/" + _idDocName);
    /* var docFolder = new Folder(mainFolder + subFolder); */
    if (!imageFolder_RGB.exists) imageFolder_RGB.create();

    var imageFile_RGB =  decodeURI(imageFolder_RGB + "/" + imageName_init + _suffixRGB + ".psd");
    var imageFile_copyRGB =  decodeURI(_ww_mainFolder + _woodwing_imageID + "/" + imageName_init + ".jpg");
    alert("imageFile_RGB: " + imageFile_RGB);
    alert("imageFile_copyRGB: " + imageFile_copyRGB);
    app.bringToFront();

    var psDoc = app.documents.getByName(_imageName);
    if (psDoc) {
        app.activeDocument = psDoc;
    } else {
        alert("Kann das Bild nicht öffnen - Abbruch!");
        return;
    }

    if(!_isWoodwing) {
        alert("wird konventionell gespeichert");
        try {
            alert("ding");
            /* saveFile_PSD(new File(imageFile_RGB), f, t, f, t, t, f); */
            /* saveJPG(1, 3, new File(imageFile_copyRGB), t, t, t); */
        } catch(e){alert(e)};
    } else {
        invert();
        alert("wird Woodwing gespeichert");
        saveFile_PSD(new File(imageFile_RGB), f, t, f, t, t, f);
        saveJPG(2, 3, new File(imageFile_copyRGB), t, t, t);
    }


   /* saveJPG(11, 3, new File("/Users/adrians/Arbeit/__temp/RGB/ohneProfil.jpg"), true, true, true); */
    function saveJPG(_quality, _scans, _file, _asCopy, _lowerCase, _embedProfiles) {
        var d = new ActionDescriptor();
        var d2 = new ActionDescriptor();
    
        d2.putInteger(s2t("extendedQuality"), _quality);
        d2.putInteger(s2t("scans"), _scans);
        d2.putEnumerated(s2t("matteColor"), s2t("matteColor"), s2t("none"));
        d.putObject(s2t("as"), s2t("JPEG"), d2);
        d.putPath(s2t("in"), _file);
        /* d.putInteger(s2t("documentID"), 65); */
        d.putBoolean(s2t("copy"), _asCopy);
        d.putBoolean(s2t("lowerCase"), _lowerCase);
        d.putBoolean(s2t("embedProfiles"), _embedProfiles);
        d.putEnumerated(s2t("saveStage"), s2t("saveStageType"), s2t("saveBegin"));
        executeAction(s2t("save"), d, DialogModes.NO);
    }

    
}




