{"version":3,"file":"Accordion.js","sourceRoot":"","sources":["Accordion.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    html,\n    CSSResultArray,\n    TemplateResult,\n    property,\n    PropertyValues,\n    queryAssignedNodes,\n} from '@spectrum-web-components/base';\n\nimport { AccordionItem } from './AccordionItem.js';\n\nimport styles from './accordion.css.js';\nimport { Focusable, getActiveElement } from '@spectrum-web-components/shared';\n\n/**\n * @element sp-accordion\n */\nexport class Accordion extends Focusable {\n    public static get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    /**\n     * Allows multiple accordion items to be opened at the same time\n     */\n    @property({ type: Boolean, reflect: true, attribute: 'allow-multiple' })\n    public allowMultiple = false;\n\n    @queryAssignedNodes()\n    private defaultNodes!: NodeListOf<AccordionItem>;\n\n    private get items(): AccordionItem[] {\n        return [...(this.defaultNodes || [])].filter(\n            (node: HTMLElement) => typeof node.tagName !== 'undefined'\n        ) as AccordionItem[];\n    }\n\n    public focus(): void {\n        if (this.focusElement === this) {\n            return;\n        }\n\n        super.focus();\n    }\n\n    /**\n     * @private\n     */\n    public get focusElement(): Accordion | AccordionItem {\n        const items = this.items;\n        if (items && !items.length) {\n            return this;\n        }\n        let index = 0;\n        while (index < items.length && items[index] && items[index].disabled) {\n            index += 1;\n        }\n        if (items[index]) {\n            return items[index];\n        }\n        /* c8 ignore next */\n        return this;\n    }\n\n    public startListeningToKeyboard(): void {\n        const items = this.items;\n        /* c8 ignore next 3 */\n        if (items && !items.length) {\n            return;\n        }\n        this.addEventListener('keydown', this.handleKeydown);\n    }\n\n    public stopListeningToKeyboard(): void {\n        this.removeEventListener('keydown', this.handleKeydown);\n    }\n\n    private handleKeydown(event: KeyboardEvent): void {\n        const { code } = event;\n        /* c8 ignore next 3 */\n        if (code !== 'ArrowDown' && code !== 'ArrowUp') {\n            return;\n        }\n        event.preventDefault();\n        const direction = code === 'ArrowDown' ? 1 : -1;\n        this.focusItemByOffset(direction);\n    }\n\n    private focusItemByOffset(direction: number): void {\n        const items = this.items;\n        const focused = items.indexOf(getActiveElement(this) as AccordionItem);\n        let next = focused;\n        let availableItems = items.length;\n        // cycle through the available items in the directions of the offset to find the next non-disabled item\n        while ((items[next].disabled || next === focused) && availableItems) {\n            availableItems -= 1;\n            next = (items.length + next + direction) % items.length;\n        }\n        // if there are no non-disabled items, skip the work to focus a child\n        if (items[next].disabled || next === focused) {\n            return;\n        }\n        items[next].focus();\n    }\n\n    private onToggle(event: Event): void {\n        const target = event.target as AccordionItem;\n        const items = [...this.items] as AccordionItem[];\n        /* c8 ignore next 3 */\n        if (items && !items.length) {\n            return;\n        }\n        if (!this.allowMultiple && !event.defaultPrevented) {\n            items.forEach((item) => {\n                if (item.open && item !== target) {\n                    item.open = false;\n                }\n            });\n        }\n    }\n\n    protected render(): TemplateResult {\n        return html`\n            <slot></slot>\n        `;\n    }\n\n    protected firstUpdated(changed: PropertyValues): void {\n        super.firstUpdated(changed);\n\n        this.addEventListener('focusin', this.startListeningToKeyboard);\n        this.addEventListener('focusout', this.stopListeningToKeyboard);\n        this.addEventListener('sp-accordion-item-toggle', this.onToggle);\n    }\n}\n"]}