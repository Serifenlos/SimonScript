{"version":3,"file":"AccordionItem.js","sourceRoot":"","sources":["AccordionItem.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;;AAEF,OAAO,EACH,IAAI,EAGJ,QAAQ,GAEX,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,MAAM,kDAAkD,CAAC;AAC7E,OAAO,+DAA+D,CAAC;AACvE,OAAO,iBAAiB,MAAM,gEAAgE,CAAC;AAE/F,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C;;;GAGG;AACH,MAAM,OAAO,aAAc,SAAQ,SAAS;IAkBxC;QACI,KAAK,EAAE,CAAC;QAbL,SAAI,GAAG,KAAK,CAAC;QAGb,UAAK,GAAG,EAAE,CAAC;QAGX,aAAQ,GAAG,KAAK,CAAC;QAQpB,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IApBM,MAAM,KAAK,MAAM;QACpB,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAWD,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAgB,CAAC;IACnE,CAAC;IAOO,SAAS,CAAC,KAAoB;QAClC,sBAAsB;QACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;SACV;QACD,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;YAClD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAEO,OAAO;QACX,sBAAsB;QACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;SACV;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEO,MAAM;QACV,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CACnC,IAAI,WAAW,CAAC,0BAA0B,EAAE;YACxC,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,IAAI;SACnB,CAAC,CACL,CAAC;QACF,IAAI,CAAC,YAAY,EAAE;YACf,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;SAC1B;IACL,CAAC;IAES,MAAM;QACZ,OAAO,IAAI,CAAA;;;;6BAIU,IAAI,CAAC,OAAO;oCACL,IAAI,CAAC,IAAI;;;sBAGvB,IAAI,CAAC,KAAK;;;;;;;;;;SAUvB,CAAC;IACN,CAAC;IAES,OAAO,CAAC,OAAuB;QACrC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;aAC9C;iBAAM;gBACH,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;aACzC;SACJ;IACL,CAAC;CACJ;AAlFG;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CACvB;AAGpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;4CACxB;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;+CACnB","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    html,\n    CSSResultArray,\n    TemplateResult,\n    property,\n    PropertyValues,\n} from '@spectrum-web-components/base';\nimport { Focusable } from '@spectrum-web-components/shared/src/focusable.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\nimport chevronIconStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\n\nimport styles from './accordion-item.css.js';\n\n/**\n * @element sp-accordion\n * @slot - The content of the item that is hidden when the item is not open\n */\nexport class AccordionItem extends Focusable {\n    public static get styles(): CSSResultArray {\n        return [styles, chevronIconStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    @property({ type: String, reflect: true })\n    public label = '';\n\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n\n    public get focusElement(): HTMLElement {\n        return this.shadowRoot.querySelector('#header') as HTMLElement;\n    }\n\n    constructor() {\n        super();\n        this.addEventListener('keydown', this.onKeyDown);\n    }\n\n    private onKeyDown(event: KeyboardEvent): void {\n        /* c8 ignore next 3 */\n        if (this.disabled) {\n            return;\n        }\n        if (event.code === 'Enter' || event.code === 'Space') {\n            event.preventDefault();\n            this.toggle();\n        }\n    }\n\n    private onClick(): void {\n        /* c8 ignore next 3 */\n        if (this.disabled) {\n            return;\n        }\n        this.toggle();\n    }\n\n    private toggle(): void {\n        this.open = !this.open;\n        const applyDefault = this.dispatchEvent(\n            new CustomEvent('sp-accordion-item-toggle', {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })\n        );\n        if (!applyDefault) {\n            this.open = !this.open;\n        }\n    }\n\n    protected render(): TemplateResult {\n        return html`\n            <h3 id=\"heading\">\n                <button\n                    id=\"header\"\n                    @click=${this.onClick}\n                    aria-expanded=${this.open}\n                    aria-controls=\"content\"\n                >\n                    ${this.label}\n                </button>\n                <sp-icon-chevron100\n                    id=\"indicator\"\n                    class=\"spectrum-UIIcon-ChevronRight100\"\n                ></sp-icon-chevron100>\n            </h3>\n            <div id=\"content\" role=\"region\" aria-labelledby=\"header\">\n                <slot></slot>\n            </div>\n        `;\n    }\n\n    protected updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (changes.has('disabled')) {\n            if (this.disabled) {\n                this.setAttribute('aria-disabled', 'true');\n            } else {\n                this.removeAttribute('aria-disabled');\n            }\n        }\n    }\n}\n"]}