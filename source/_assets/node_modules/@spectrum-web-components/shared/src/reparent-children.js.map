{"version":3,"file":"reparent-children.js","sourceRoot":"","sources":["reparent-children.ts"],"names":[],"mappings":"AAAA,SAAS,eAAe,CACpB,gBAA2B,EAC3B,WAAsB,EACtB,mBAA8C,EAAE;IAEhD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrD,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,aAAa,GACf,eAAe,CAAC,aAAa,IAAI,eAAe,CAAC,WAAW,EAAE,CAAC;QACnE,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YACzB,gBAAgB,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;SACvC;QACD,aAAa,CAAC,YAAY,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QACxD,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClC;IACD,OAAO,WAAW,CAAC;AACvB,CAAC;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC5B,WAAsB,EACtB,SAAkB,EAClB,eAAiE,EAChD,EAAE;IACnB,IAAI,gBAAgB,GAAc,EAAE,CAAC;IACrC,IAAI,gBAAgB,GAA8B,EAAE,CAAC;IAErD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrD,MAAM,eAAe,GAAY,QAAQ,CAAC,aAAa,CACnD,oCAAoC,CACvC,CAAC;QACF,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEvC,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,eAAe,EAAE;YACjB,gBAAgB,CAAC,IAAI,CACjB,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAY,EAAE,EAAE,GAAE,CAAC,CAAC,CACxD,CAAC;SACL;QACD,MAAM,aAAa,GACf,UAAU,CAAC,aAAa,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;QACzD,aAAa,CAAC,YAAY,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QACxD,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAChC;IAED,OAAO;QACH,OAAO,eAAe,CAAC,gBAAgB,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAC5E,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["function restoreChildren(\n    placeholderItems: Comment[],\n    srcElements: Element[],\n    cleanupCallbacks: ((el: Element) => void)[] = []\n): Element[] {\n    for (let index = 0; index < srcElements.length; ++index) {\n        const srcElement = srcElements[index];\n        const placeholderItem = placeholderItems[index];\n        const parentElement =\n            placeholderItem.parentElement || placeholderItem.getRootNode();\n        if (cleanupCallbacks[index]) {\n            cleanupCallbacks[index](srcElement);\n        }\n        parentElement.replaceChild(srcElement, placeholderItem);\n        delete placeholderItems[index];\n    }\n    return srcElements;\n}\n\nexport const reparentChildren = (\n    srcElements: Element[],\n    newParent: Element,\n    prepareCallback?: (el: Element) => ((el: Element) => void) | void\n): (() => Element[]) => {\n    let placeholderItems: Comment[] = [];\n    let cleanupCallbacks: ((el: Element) => void)[] = [];\n\n    for (let index = 0; index < srcElements.length; ++index) {\n        const placeholderItem: Comment = document.createComment(\n            'placeholder for reparented element'\n        );\n        placeholderItems.push(placeholderItem);\n\n        const srcElement = srcElements[index];\n        if (prepareCallback) {\n            cleanupCallbacks.push(\n                prepareCallback(srcElement) || ((_el: Element) => {})\n            );\n        }\n        const parentElement =\n            srcElement.parentElement || srcElement.getRootNode();\n        parentElement.replaceChild(placeholderItem, srcElement);\n        newParent.append(srcElement);\n    }\n\n    return function (): Element[] {\n        return restoreChildren(placeholderItems, srcElements, cleanupCallbacks);\n    };\n};\n"]}