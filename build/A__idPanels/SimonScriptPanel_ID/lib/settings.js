const fs=require("uxp").storage.localFileSystem,{version:version}=require("../manifest.json"),getSettings=async()=>{try{const t=await fs.getDataFolder(),e=await t.getEntry(`settings_${version}.json`),r=await e.read();return JSON.parse(r)}catch(t){return null}},createSettingsFile=async(t,e)=>{const r=JSON.stringify(t),i=await fs.getDataFolder(),n=await i.createFile(`${e}_${version}.json`);return await n.write(r,{overwrite:!0}),t},setSetting=async(t,e)=>{const r=await getSettings();r[t]=e;const i=await fs.getDataFolder(),n=await i.getEntry(`settings_${version}.json`);await n.write(JSON.stringify(r))},setWorkingFolder=async()=>{const t=document.querySelector("#labelWorkingFolder"),e=await fs.getFolder();if(!e)throw console.error("User exited without selecting a folder"),error;const r=await fs.createPersistentToken(e);await setSetting("workingFolder",{path:e.nativePath,token:r}),t.innerHTML="",t.innerHTML=e.nativePath};module.exports={getSettings:getSettings,createSettingsFile:createSettingsFile,setWorkingFolder:setWorkingFolder};